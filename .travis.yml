language: rust
sudo: required
env:
  global:
    - PROJECT_NAME: offset
    - RUST_BACKTRACE: full

git:
  depth: 1

# Don't cache the cargo registry:
# See: https://levans.fr/rust_travis_cache.html
before_cache:
    - travis/trusty/post/cargo-sweep.sh
    - rm -rf $HOME/.cargo/registry

cache:
  directories:
    - $HOME/.cargo
    - $HOME/install
    # Android SDK
    # - $HOME/android-sdk-dl
    # - $HOME/android-sdk

matrix:
  fast_finish: true
  include:

# - name: Linux
#   env: TARGET=x86_64-unknown-linux-gnu CC=gcc-6 CXX=g++-6 RUSTFLAGS="-C link-dead-code"
#   os: linux
#   dist: trusty
#   rust: none
#   addons:
#     apt:
#       packages:
#       - gcc-6
#       - g++-6
#       sources:
#       - ubuntu-toolchain-r-test
#   script:
#   - travis/trusty/pre/cargo-config.sh
#   - travis/trusty/pre/capnp.sh
#   - cargo fmt --all -- --check
#   - cargo clippy
#     # We add target dir so that kcov can find the test files to run:
#   - cargo test --target ${TARGET}
#   - travis/trusty/post/kcov/try-install.sh
#   - travis/trusty/post/kcov/run.sh

# - name: macOS
#   env: TARGET=x86_64-apple-darwin
#   os: osx
#   rust: none
#   osx_image: xcode9.4.1
#   # Solution due to https://travis-ci.community/t/homebrew-syntax-error/5623 :
#   before_script:
#   - HOMEBREW_NO_AUTO_UPDATE=1 brew install capnp
#   script:
#   - cargo test

# - name: Windows
#   env: TARGET=x86_64-pc-windows-msvc
#   os: windows
#   # Used as a temporary fix for windows CI issue in travis.
#   # See: https://travis-ci.community/t/windows-instances-hanging-before-install/250/25
#   filter_secrets: false
#   rust: none
#   before_script:
#   # We install vcredist2010 as a requirement for the yasm assembler (Used for ring compilation)
#   - choco install vcredist2010 capnproto strawberryperl
#   - mkdir -p $HOME/install/yasm
#   - curl -o $HOME/install/yasm/yasm.exe https://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe
#   - export PATH=$HOME/install/yasm:$PATH
#   - echo $PATH
#   - rustup target add x86_64-pc-windows-msvc
#   script:
#       - cargo test

    # Based on: https://github.com/kennytm/rust-ios-android/blob/master/.travis.yml
  - name: Android
    os: linux
    dist: trusty
    rust: none
    env:
      # Get revision number from https://dl.google.com/android/repository/repository2-1.xml
      # Look for the string 'sdk-tools-linux-'.
      - ANDROID_SDK_VERSION=4333796
      - ANDROID_VERSION=26
    before_install:
      - export ANDROID_HOME="${HOME}/android-sdk"
      - mkdir -p $ANDROID_HOME
      - mkdir -p ${HOME}/android-sdk-dl
      - export ANDROID_NDK_HOME="${ANDROID_HOME}/ndk-bundle"
      - export PATH=$PATH:"${ANDROID_HOME}/tools/bin:${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin"

    install:
      # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
      # Latest version available here: https://developer.android.com/studio/#command-tools
      - > 
        if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then 
          curl https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip > $HOME/android-sdk-dl/sdk-tools.zip ; 
        fi
      - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $ANDROID_HOME;

      # Create repositories.cfg ahead of time, see: 
      # https://stackoverflow.com/questions/43433542/stuck-at-android-repositories-cfg-could-not-be-loaded
      - mkdir -p .android && touch ~/.android/repositories.cfg
      # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
      - echo y | $ANDROID_HOME/tools/bin/sdkmanager 'platforms;android-${ANDROID_VERSION}' 'build-tools;${ANDROID_VERSION}.0.0' 'ndk-bundle' > /dev/null
      # Add rust targets:
      - rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android

      # Create ~/.cargo/config (from template):
      - cat travis/cargo_config_template | envsubst > $HOME/.cargo/config

      # Add symlinks for clang compilers:
      - >
        ln -s "${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${ANDROID_VERSION}-clang" 
                "${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-clang" &&
        ln -s "${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi${ANDROID_VERSION}-clang" 
                "${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-clang" &&
        ln -s "${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android${ANDROID_VERSION}-clang"
                "${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android-clang" &&

    script:
      - cargo build --target aarch64-linux-android
      - cargo build --target armv7-linux-androideabi
      - cargo build --target i686-linux-android

before_deploy: travis/before_deploy.sh
deploy:
  provider: releases
  api_key:
    secure: MpKcz5y3DQGkZYpekopOAHkErw8RoJSsnLDWzTQg+bxDD4+30Q+aZ21EK6BIvOgNTcGZCpxKAr1iobr9IVv9tlEZVGeV3eiCeAUCq52uQmDfYf5VkckwF5DLBcKN7FLZZVgKq8m30OLXDyxuwogd39LcKzTKyHURQAa7DHSjomUf+Yu+/+PFMxCisvFKl0Etp/qMbPXuoZya19qH5zDNupf4BsB00qJo0SMF8pPZ/p+m+BGotBNNwLWGrfDt5Pv460/0H8MixkrVnt3/tKmZ3MvhQ42bMgMR5vg+j/Ioeiq2jiUjoLaC0HixL8wyOKyiXiuvAE812P5MEeCA6RrjG2q6CaOM+b4+Az5q/PbM5zzmhjT6wWVmNfIb7hqin7k63cAL5BBAmqcWO9LYazk3/8Eqv+/CVGvZyVixz7/qhbBzA/J5sJiu4O5IHYgtchXUcyZh+YIPwQpfwbHhyUl55wIRqMiOohaBxufYBKGUoe5pH26U/acaY4xSzRKCbXTej5bW+pY3OkeUKZFEETDAPdGcGjrD12CFbSaY5ikYmkFSDKluMcbvXpWCRXvPo+D+c1RPJ6xxxYKA/+6AH3nhQEwX6viEYD/XtxPYUEdbgYcImz/HL5clo6j0uiP/gHmrdGY+tg8btOozNvkNXMKJyEffYMFyuDbPrjWOK712/pU=
  file: $HOME/deployment/${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.tar.gz
  skip_cleanup: true
  on:
    tags: true
    repo: freedomlayer/offset
    branch: master
branches:
  only:
    # Pushes and PR to the master branch
    - master
    # Ruby regex to match tags. Required, or travis won't trigger deploys when
    # a new tag is pushed. Version tags should be of the form: v0.1.0
    - /^v\d+\.\d+\.\d+.*$/
